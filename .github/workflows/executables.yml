name: executables

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-latest", "ubuntu-latest", "macOS-latest"]
        python-version: ["3.11"]
        architecture: ["x64"]
        include:
        - os: "windows-2019"
          python-version: "3.8"
          architecture: "x86"

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }} ${{ matrix.architecture }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install dependencies
      run: pip install requests requests[socks] yt-dlp pyinstaller
      
    - name: Build executable
      run: python scripts/pyinstaller.py
    
    - name: Archive executable
      shell: python
      run: |
        import os, zipfile
        
        os.mkdir("zip")
        with zipfile.ZipFile(os.path.join("zip", "gallery-dl-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}.zip"), "w") as zf:
          zf.write(os.path.join("dist", "gallery-dl." + ("exe" if os.name == "nt" else "bin")))
          
    - name: Upload executable
      uses: actions/upload-artifact@v3
      with:
        name: gallery-dl-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
        path: zip/*

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3.0.2
      with:
        path: artifacts
        
    - run: |
        mkdir dist
        find . -type f -exec mv "{}" ./dist \;
        
    - name: Create Release
      uses: ncipollo/release-action@v1.12.0
      with:
        allowUpdates: true
        artifactErrorsFailBuild: true
        artifacts: dist/*
        generateReleaseNotes: true
        makeLatest: "true"
        prerelease: false
        removeArtifacts: true
        replacesArtifacts: true
        tag: latest
        updateOnlyUnreleased: true
